 Partendo dal server che abbia almeno le rotte dell'utente:

 * quando viene creato un utente tramite POST si deve fare una GET a questo indirizzo https://fakestoreapi.com/users/1, utilizzando l'id corretto, e completare tutti i campi dell'oggetto utente con cio' che si trova nella risposta dell'API. (fatto)

Se l'utente con quell'id non c'e' nelle fakestoreapi semplicemente lo lasciate con i dati che ha POSTato l'utente, quindi per come abbiamo visto fino ad ora solo con name e username

 * proteggere le chiamate PUT e DELETE con un token che va specificato negli header, questo token deve contenere un "segreto" che e' specificato nel server, non vi preoccupate di criptare/crittografare/etc niente di tutto cio'. Questo e' il solito esempio di task di esplorazione della teoria. Quindi il token deve essere controllato nel server: controllarlo vuol dire verificare che nel server sia uguale a quanto specificato nel client.

 Quindi il token deve essere controllato nel server: controllarlo vuol dire verificare che nel server sia uguale a quanto specificato nel client. (fatto)

 header = vedi esercizio chatgpt 

 token = una stringa

per chi ha terminato i task di questa mattina:
creare un endpoint di registrazione al quale sia possibile registrare una coppia utente / password
creare un endpoint di login al quale sia possibile loggarsi sul server
creare un endpoint /session che ritorna i dettagli dell'utente se loggato, dopo 60 secondi che utente e' loggato viene automaticamente sloggato dal server

Non e' banale, prendetevi del tempo per capire come fare 

